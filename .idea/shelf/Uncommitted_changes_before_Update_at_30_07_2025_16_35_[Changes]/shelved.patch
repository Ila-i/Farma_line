Index: profile_creation/iscrizione.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from abc import ABC, abstractmethod\r\nimport base_iscrizioni\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom sqlalchemy import create_engine\r\nfrom base_iscrizioni import engine, Cliente as ClienteDB, TesseraSanitaria as TesseraSanitariaDB\r\nfrom sqlalchemy import ForeignKey\r\n\r\nSession = sessionmaker(bind=engine)\r\nsession = Session()\r\n\r\nclass Persona (ABC) :\r\n    nome: str\r\n    cognome: str\r\n\r\n    def __init__(self):\r\n        self.nome = input(\"Inserire il proprio nome : \")\r\n        self.cognome = input(\"Inserire il proprio cognome : \")\r\n\r\nclass TesseraSanitaria :\r\n    codice_fiscale: str\r\n    sesso: str\r\n    luogo_nascita: str\r\n    provincia: str\r\n    data_nascita: str\r\n    data_scadenza: str\r\n    numero_identificazione_tessera: str\r\n\r\n    def controllo(self, messaggio: str, lunghezza: int) -> str : #controllo del numero dei caratteri alfanumerici( va aggiunto se si riesce il controllo più specifico o messo come eccezione\r\n       parametro = input(messaggio)\r\n       while len(parametro) != lunghezza :\r\n            parametro = input(f\" il parametro non è valido, riprovare : \")\r\n       return parametro\r\n\r\n#TODO quando possibile inserire controllo data di nascita e scadenza tessera sanitaria\r\n\r\n    def __init__(self):\r\n        print( \" Di seguito si inseriscano i dati della tessera sanitaria : \")\r\n        self.codice_fiscale = self.controllo(\" CODICE FISCALE :\", 16) # nel codice fiscale si contano 16 caratteri alfanumerici\r\n        self.sesso = self.controllo(\" SESSO : \", 1)\r\n        self.luogo_nascita = input(\" LUOGO DI NASCITA : \")\r\n        self.provincia = self.controllo(\" PROVINCIA : \", 2)\r\n        self.data_nascita = self.controllo(\" DATA DI NASCITA (gg/mm/aaaa) : \", 10)\r\n        self.data_scadenza = self.controllo(\" DATA DI SCADENZA (gg/mm/aaaa) : \", 10)\r\n        self.numero_identificazione_tessera = self.controllo(\" NUMERO IDENTIFICAZIONE TESSERA : \", 20)# sulla tessera sanitaria fisica sono 20 caratteri alfanumerici\r\n\r\nclass Cliente(Persona):\r\n    t_s: TesseraSanitaria #t_s abbreviazione tessera sanitaria\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.t_s = TesseraSanitaria()\r\n    #def ricerca () # da database per controllo su presenza o meno della persona\r\n\r\nclass TesserinoProfessionale :\r\n    ordine_di_appartenenza: str # indica il settore lavorativo a cui appartieni\r\n    n_matricola : str # indica il numero di iscrizione all'albo di riferimento\r\n\r\n    def __init__(self, ordine :str):\r\n        self.ordine_di_appartenenza = ordine\r\n        self.n_iscrizione_albo = input(\"Inserire il proprio numero di matricola : \")\r\n\r\nclass Farmacista(Persona):\r\n    t_p: TesserinoProfessionale #t_p abbreviazione tesserino professionale\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.t_p = TesserinoProfessionale(\"farmacista\")\r\n    #def ricerca () # da database per controllo su presenza o meno della persona\r\n\r\nclass ProfiloUtente :\r\n    nome_utente:str\r\n    password: str\r\n    utente: Persona\r\n\r\n    def __init__(self,user : Persona):\r\n        self.utente = user\r\n        self.nome_utente = input(\" inserire un nome utente : \") # inserire controllo per corrispondenza profilo utente\r\n        self.password = input(\" inserire una password : \")\r\n\r\n\r\ndef iscriversi(user: Persona) -> ProfiloUtente:\r\n    cliente = session.query(ClienteDB).filter_by(codice_fiscale=user.t_s.codice_fiscale).first()\r\n\r\n    if cliente:\r\n        print(\"utente già registrato\")\r\n    else:\r\n        profilo = ProfiloUtente(user)\r\n        print(f\"\"\"registrazione effettuata con successo.\r\n                 Benvenuto {profilo.nome_utente} ! \"\"\")\r\n\r\n        # Crea le istanze dei modelli SQLAlchemy da salvare\r\n        tessera = TesseraSanitariaDB(\r\n            codice_fiscale=user.t_s.codice_fiscale,\r\n            sesso=user.t_s.sesso,\r\n            luogo_nascita=user.t_s.luogo_nascita,\r\n            provincia=user.t_s.provincia,\r\n            data_nascita=user.t_s.data_nascita,\r\n            data_scadenza=user.t_s.data_scadenza,\r\n            numero_identificazione_tessera=user.t_s.numero_identificazione_tessera\r\n        )\r\n        session.add(tessera)\r\n        session.commit()\r\n\r\n        cliente_db = ClienteDB(\r\n            nome=user.nome,\r\n            cognome=user.cognome,\r\n            codice_fiscale=user.t_s.codice_fiscale\r\n        )\r\n\r\n\r\n        session.add(cliente_db)\r\n        session.commit()\r\n        return profilo\r\n\r\n\r\n\r\n#verifica del codice\r\nprofilo : ProfiloUtente\r\npersona = Cliente()\r\nprint(\" profilo cliente \")\r\nprofilo = iscriversi(persona)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/profile_creation/iscrizione.py b/profile_creation/iscrizione.py
--- a/profile_creation/iscrizione.py	(revision d5e27c576cbefac50c117dc198379dde92c5ad2a)
+++ b/profile_creation/iscrizione.py	(date 1753885008386)
@@ -1,9 +1,7 @@
-from abc import ABC, abstractmethod
-import base_iscrizioni
+from abc import ABC
+import profile_creatiorn.base_iscrizioni
 from sqlalchemy.orm import sessionmaker
-from sqlalchemy import create_engine
-from base_iscrizioni import engine, Cliente as ClienteDB, TesseraSanitaria as TesseraSanitariaDB
-from sqlalchemy import ForeignKey
+from base_iscrizioni import *
 
 Session = sessionmaker(bind=engine)
 session = Session()
@@ -79,6 +77,7 @@
 
 
 def iscriversi(user: Persona) -> ProfiloUtente:
+
     cliente = session.query(ClienteDB).filter_by(codice_fiscale=user.t_s.codice_fiscale).first()
 
     if cliente:
@@ -115,7 +114,7 @@
 
 
 #verifica del codice
-profilo : ProfiloUtente
+profile : ProfiloUtente
 persona = Cliente()
 print(" profilo cliente ")
 profilo = iscriversi(persona)
\ No newline at end of file
Index: profile_creation/base_iscrizioni.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from enum import unique\r\n\r\nfrom sqlalchemy import create_engine\r\nengine = create_engine('postgresql+psycopg2://postgres:postgres@localhost:5432/Farmaline')\r\n\r\nfrom sqlalchemy import Column, Integer, String, DateTime, Date, ForeignKey\r\nfrom sqlalchemy.orm import sessionmaker, declarative_base\r\nBase = declarative_base()\r\n\r\n\r\nclass TesseraSanitaria(Base):\r\n    __tablename__ = 'tessere_sanitarie'\r\n\r\n    codice_fiscale = Column(String, primary_key=True)\r\n    sesso = Column(String)\r\n    luogo_nascita = Column(String)\r\n    provincia = Column(String)\r\n    data_nascita = Column(String)\r\n    data_scadenza = Column(String)\r\n    numero_identificazione_tessera = Column(String)\r\n\r\nclass Cliente(Base):\r\n    __tablename__ = 'clienti'\r\n\r\n    nome = Column(String, nullable=False)\r\n    cognome = Column(String, nullable=False)\r\n    codice_fiscale = Column(String, ForeignKey('tessere_sanitarie.codice_fiscale'),primary_key=True, nullable=False, unique=True)\r\n\r\nclass TesserinoProfessionale(Base):\r\n    __tablename__ = 'tesserino_professionale'\r\n\r\n    n_matricola = Column(String, primary_key=True, unique=True)\r\n    ordine_di_appartenenza = Column(String)\r\n\r\nclass Farmacista(Base):\r\n    __tablename__ = 'farmacisti'\r\n\r\n    nome = Column(String(100), nullable=False)\r\n    cognome = Column(String(100), nullable=False)\r\n    matricola = Column(String, ForeignKey('tesserino_professionale.n_matricola'),primary_key=True, nullable=False, unique=True)\r\n\r\nBase.metadata.create_all(engine)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/profile_creation/base_iscrizioni.py b/profile_creation/base_iscrizioni.py
--- a/profile_creation/base_iscrizioni.py	(revision d5e27c576cbefac50c117dc198379dde92c5ad2a)
+++ b/profile_creation/base_iscrizioni.py	(date 1753884850015)
@@ -1,14 +1,12 @@
 from enum import unique
-
 from sqlalchemy import create_engine
 engine = create_engine('postgresql+psycopg2://postgres:postgres@localhost:5432/Farmaline')
-
 from sqlalchemy import Column, Integer, String, DateTime, Date, ForeignKey
 from sqlalchemy.orm import sessionmaker, declarative_base
 Base = declarative_base()
 
 
-class TesseraSanitaria(Base):
+class TesseraSanitariaDB(Base):
     __tablename__ = 'tessere_sanitarie'
 
     codice_fiscale = Column(String, primary_key=True)
@@ -19,20 +17,20 @@
     data_scadenza = Column(String)
     numero_identificazione_tessera = Column(String)
 
-class Cliente(Base):
+class ClienteDB(Base):
     __tablename__ = 'clienti'
 
     nome = Column(String, nullable=False)
     cognome = Column(String, nullable=False)
     codice_fiscale = Column(String, ForeignKey('tessere_sanitarie.codice_fiscale'),primary_key=True, nullable=False, unique=True)
 
-class TesserinoProfessionale(Base):
+class TesserinoProfessionaleDB(Base):
     __tablename__ = 'tesserino_professionale'
 
     n_matricola = Column(String, primary_key=True, unique=True)
     ordine_di_appartenenza = Column(String)
 
-class Farmacista(Base):
+class FarmacistaDB(Base):
     __tablename__ = 'farmacisti'
 
     nome = Column(String(100), nullable=False)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"687e12ae-2a07-4650-9e4f-85933ff285c1\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/Farma_line.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/Farma_line.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/profile_creation/base_iscrizioni.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/profile_creation/base_iscrizioni.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/profile_creation/iscrizione.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/profile_creation/iscrizione.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Ila-i&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/Ila-i/Farma_line.git\",\r\n    \"accountId\": \"ef441d76-cfff-49f7-ab30-11f7b7381cc9\"\r\n  }\r\n}]]></component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/profile_creation/base_iscrizioni.py\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/profile_creation/iscrizione.py\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"30aQHyngg5WLdQa6YFFy98dhzXs\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.base_iscrizioni.executor\": \"Run\",\r\n    \"Python.iscrizione.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-PY-251.26927.90\" />\r\n        <option value=\"bundled-python-sdk-41e8cd69c857-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.90\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"687e12ae-2a07-4650-9e4f-85933ff285c1\" name=\"Changes\" comment=\"\" />\r\n      <created>1753863119875</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1753863119875</updated>\r\n      <workItem from=\"1753881483728\" duration=\"2523000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"aggiunta la directory profile con il file iscrizione\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753864288845</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753864288845</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"realizzate le tabelle per la sezione di iscrizione\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1753870648752</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1753870648752</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"aggiunta la directory profile con il file iscrizione\" />\r\n    <MESSAGE value=\"realizzate le tabelle per la sezione di iscrizione\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"realizzate le tabelle per la sezione di iscrizione\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Farma_line$iscrizione.coverage\" NAME=\"iscrizione Coverage Results\" MODIFIED=\"1753883589561\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/profile_creation\" />\r\n    <SUITE FILE_PATH=\"coverage/Farma_line$base_iscrizioni.coverage\" NAME=\"base_iscrizioni Coverage Results\" MODIFIED=\"1753882474763\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/profile_creation\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d5e27c576cbefac50c117dc198379dde92c5ad2a)
+++ b/.idea/workspace.xml	(date 1753886051571)
@@ -4,9 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="687e12ae-2a07-4650-9e4f-85933ff285c1" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/Farma_line.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Farma_line.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="687e12ae-2a07-4650-9e4f-85933ff285c1" name="Changes" comment="risoluzione errori classi/database">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/profile_creation/base_iscrizioni.py" beforeDir="false" afterPath="$PROJECT_DIR$/profile_creation/base_iscrizioni.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/profile_creation/iscrizione.py" beforeDir="false" afterPath="$PROJECT_DIR$/profile_creation/iscrizione.py" afterDir="false" />
@@ -55,6 +53,7 @@
     "Python.base_iscrizioni.executor": "Run",
     "Python.iscrizione.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
     "RunOnceActivity.git.unshallow": "true",
     "git-widget-placeholder": "master",
     "node.js.detected.package.eslint": "true",
@@ -82,7 +81,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1753863119875</updated>
-      <workItem from="1753881483728" duration="2523000" />
+      <workItem from="1753881483728" duration="4237000" />
     </task>
     <task id="LOCAL-00001" summary="aggiunta la directory profile con il file iscrizione">
       <option name="closed" value="true" />
@@ -100,7 +99,15 @@
       <option name="project" value="LOCAL" />
       <updated>1753870648752</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="risoluzione errori classi/database">
+      <option name="closed" value="true" />
+      <created>1753884529191</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1753884529191</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -120,10 +127,11 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="aggiunta la directory profile con il file iscrizione" />
     <MESSAGE value="realizzate le tabelle per la sezione di iscrizione" />
-    <option name="LAST_COMMIT_MESSAGE" value="realizzate le tabelle per la sezione di iscrizione" />
+    <MESSAGE value="risoluzione errori classi/database" />
+    <option name="LAST_COMMIT_MESSAGE" value="risoluzione errori classi/database" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Farma_line$iscrizione.coverage" NAME="iscrizione Coverage Results" MODIFIED="1753883589561" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/profile_creation" />
+    <SUITE FILE_PATH="coverage/Farma_line$iscrizione.coverage" NAME="iscrizione Coverage Results" MODIFIED="1753884406240" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/profile_creation" />
     <SUITE FILE_PATH="coverage/Farma_line$base_iscrizioni.coverage" NAME="base_iscrizioni Coverage Results" MODIFIED="1753882474763" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/profile_creation" />
   </component>
 </project>
\ No newline at end of file
